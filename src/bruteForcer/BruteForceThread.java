/**
 * Copyright 2015 Marclass
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package bruteForcer;

public class BruteForceThread implements Runnable{
	
	private String addr;
	private int startIndex;
	private int endIndex;
	private String foundAddr;
	private BruteForce brute;
	
	public BruteForceThread(String addr, int startIndex, int endIndex){
		this.addr=addr;
		this.startIndex=startIndex;
		this.endIndex=endIndex;
		//this.foundAddr="";
		this.brute= new BruteForce(addr);
	}

	@Override
	public void run() {
		try {
			String temp=this.brute.begin(startIndex, endIndex, true);
			foundAddr=temp;
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public boolean isDone(){
		return this.foundAddr!=null;
	}
	public String getFoundAddr(){
		return this.foundAddr;
	}
	public long getCount(){
		return brute.getCount();
	}
}